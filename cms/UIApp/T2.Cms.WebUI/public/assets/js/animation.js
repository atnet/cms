/* 此文件由系统自动生成! */
//
//文件：动画插件
//版本: 1.0
//时间：2014-11-06
//
jr.extend({ animation: { timer: function (a, b, c, d, e) { if (!a) return; var f = c != null ? c : 0; var g = d != null ? d : 100; var h = 0; var i = 0; if (e < 1 || e > 5) { h = (d - c) < 0 ? -e : e; i = 20 } else { h = (g - f) / (4 * (6 - e)); h *= (Math.abs(g - f) / 100); i = 1000 / h; i = i < 0 ? -Math.ceil(i) : Math.floor(i); if (i < 30) i = 30 } var t = setInterval(function () { f = f + h; if (Math.abs(f) >= Math.abs(g)) { f = g; if (b instanceof Function) b(); clearInterval(t) } a(f, h) }, i) }, opacity: function (e, d, f, g) { var h = jr.$(e); var s = jr.style(h); var i = s["opacity"]; if (i == undefined) { if (h.filters.alpha) { i = h.filters.alpha.opacity / 100 } else { i = 0 } } this.timer((function (e) { return function (t, a) { var b = a < 0; var c = b ? (100 + t) / 100 : t / 100; e.style.opacity = c; e.style.filter = 'alpha(opacity=' + (c * 100) + ')'; if (t == -100 && b) { e.style.display = 'none' } else if (!b && t == a) { e.style.display = '' } } })(h), d, parseInt(i), f, g) }, fade: function (e, a, b) { var c = b != null ? b : 3; var d = -100; this.opacity(e, a, d, c) }, show: function (e, a, b) { var c = b != null ? b : 3; var d = 100; this.opacity(e, a, d, c) }, toggle: function (e, a, b) { this._toggle(e, 'wh', a, b) }, toggleWidth: function (e, a, b) { this._toggle(e, 'w', a, b) }, toggleHeight: function (e, a, b) { this._toggle(e, 'h', a, b) }, _toggle: function (e, a, b, c) { e = jr.$(e); var d = jr.style(e); var w = e.offsetWidth; var h = e.offsetHeight; var f = parseInt(e.getAttribute("toggle-w") || 0); var g = parseInt(e.getAttribute("toggle-h") || 0); if (f == 0 || g == 0) { f = jr.clientWidth(e); g = jr.clientHeight(e); if (w == 0 || h == 0) { w = f; h = g } e.setAttribute('toggle-w', w); e.setAttribute('toggle-h', h) } var i = c == null ? 2 : c; var j = i * (g / f); if (d["display"] == 'none') { var k = { overflow: 'hidden', display: 'inherit' }; if (a.indexOf('w') != -1) { k.width = '0px' } if (a.indexOf('h') != -1) { k.height = '0px' } jr.style(e, k); this._toggleShow(e, a, b, w, f, h, g, i, j) } else { e.style.overflow = 'hidden'; this._toggleClose(e, a, b, w, f, h, g, i, j) } }, _toggleShow: function (e, b, c, w, d, h, f, g, i) { if (b.indexOf('w') != -1) { this.timer((function (e, w) { return function (t, a) { e.style.width = (a > 0 ? t : (w + t)) + 'px' } })(e, w), c, 0, d, g) } if (b.indexOf('h') != -1) { this.timer((function (e, h) { return function (t, a) { e.style.height = (a > 0 ? t : (h + t)) + 'px' } })(e, h), c, 0, f, i) } }, _toggleClose: function (e, c, d, w, f, h, f, g, i) { if (c.indexOf('w') != -1) { this.timer((function (e, w) { return function (t, a) { var b = (a > 0 ? t : (w + t)); if (b < 0) b = 0; e.style.width = b + 'px'; if (b == 0) { e.style.display = 'none' } } })(e, w), d, 0, -w, g) } if (c.indexOf('h') != -1) { this.timer((function (e, h) { return function (t, a) { var b = a > 0 ? t : h + t; if (b < 0) b = 0; e.style.height = b + 'px'; if (b == 0) { e.style.display = 'none' } } })(e, h), d, 0, -h, i) } } } });
